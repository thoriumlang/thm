
    J    @start

// in: r0 is the buffer idx
:select_buffer
    PUSH r1
    MOV  r1, $__video_meta
    STOR r1, r0
    POP  r1
    RET

:start
    MOV  r0, 0x00000001
    CALL @select_buffer // select buffer 1

    MOV  r2, 4
    MOV  r0, 0x000000ff // blue
    MOV  r1, 0x00ff0000 // red

    MOV  r4, $__video_buffer_size

:loop
    // XBM  1
// start blue
    MOV  r5, $__video_buffer1
    MOV  r6, $__video_buffer1
    ADD  r6, r4                 // r5 = buffer1, r6 = end of buffer1

:blue
    STOR r5, r0
    ADD  r5, r2                 // move to next pixel
    CMP  r5, r6
    JNE  @blue
    
    // select buffer 0
    PUSH r0
    MOV  r0, 0x00000000
    CALL @select_buffer
    POP  r0


// start red
    MOV  r5, $__video_buffer2
    MOV  r6, $__video_buffer2
    ADD  r6, r4                 // r5 = buffer2, r6 = end of buffer2

:red
    STOR r5, r1
    ADD  r5, r2                 // move to next pixel
    CMP  r5, r6
    JNE  @red

    // select frame buffer 1
    PUSH r0
    MOV  r0, 0x01000000
    CALL @select_buffer
    POP  r0

    J    @loop

    HALT
