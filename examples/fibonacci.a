// computes fibonacci
// in:  r0 contains the index to iteration count
// out: r3 contains the result

    $fib_0 = 0
    $fib_1 = 1

    PUSH r0
    MOV  r3, $fib_0
    MOV  r4, $fib_1

    // if n == 0, we have the result in r3
    CMP  r0, r3
    JEQ  @end

    // if n != 1, we have to compute the result
    CMP  r0, r4
    JNE  @loop

    // if n == 1, we have the result in r4, just need to move it
    MOV  r3, r4
    J    @end

:loop
    // compute next index
    MOV  r5, r3
    MOV  r3, r4
    ADD  r4, r5

    // decrement counter, continue looping if > 0
    DEC  r0
    JNE  @loop

:end
    POP  r0 // restore initial target

    MOV r31, 0x1050
    STOR r31, r3
    LOAD r4, r31

    HALT
