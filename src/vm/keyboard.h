/**
 * Copyright 2021 Christophe Pollet
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef THM_KEYBOARD_H
#define THM_KEYBOARD_H

#include "pic.h"

typedef struct Keyboard Keyboard;
typedef uint16_t keyboard_key;

Keyboard *keyboard_create(Bus *bus, PIC *pic);

void keyboard_destroy(Keyboard *this);

void keyboard_key_pressed(Keyboard *this, keyboard_key key);

void keyboard_key_released(Keyboard *this, keyboard_key key);

typedef enum {
    KEYBOARD_KEY_NONE = 0,
    KEYBOARD_KEY_UNKNOWN,
    KEYBOARD_KEY_SPACE,
    KEYBOARD_KEY_APOSTROPHE,
    KEYBOARD_KEY_COMMA,
    KEYBOARD_KEY_MINUS,
    KEYBOARD_KEY_PERIOD,
    KEYBOARD_KEY_SLASH,
    KEYBOARD_KEY_0,
    KEYBOARD_KEY_1,
    KEYBOARD_KEY_2,
    KEYBOARD_KEY_3,
    KEYBOARD_KEY_4,
    KEYBOARD_KEY_5,
    KEYBOARD_KEY_6,
    KEYBOARD_KEY_7,
    KEYBOARD_KEY_8,
    KEYBOARD_KEY_9,
    KEYBOARD_KEY_SEMICOLON,
    KEYBOARD_KEY_EQUAL,
    KEYBOARD_KEY_A,
    KEYBOARD_KEY_B,
    KEYBOARD_KEY_C,
    KEYBOARD_KEY_D,
    KEYBOARD_KEY_E,
    KEYBOARD_KEY_F,
    KEYBOARD_KEY_G,
    KEYBOARD_KEY_H,
    KEYBOARD_KEY_I,
    KEYBOARD_KEY_J,
    KEYBOARD_KEY_K,
    KEYBOARD_KEY_L,
    KEYBOARD_KEY_M,
    KEYBOARD_KEY_N,
    KEYBOARD_KEY_O,
    KEYBOARD_KEY_P,
    KEYBOARD_KEY_Q,
    KEYBOARD_KEY_R,
    KEYBOARD_KEY_S,
    KEYBOARD_KEY_T,
    KEYBOARD_KEY_U,
    KEYBOARD_KEY_V,
    KEYBOARD_KEY_W,
    KEYBOARD_KEY_X,
    KEYBOARD_KEY_Y,
    KEYBOARD_KEY_Z,
    KEYBOARD_KEY_LEFT_BRACKET,
    KEYBOARD_KEY_BACKSLASH,
    KEYBOARD_KEY_RIGHT_BRACKET,
    KEYBOARD_KEY_GRAVE_ACCENT,
    KEYBOARD_KEY_WORLD_1,
    KEYBOARD_KEY_WORLD_2,
    KEYBOARD_KEY_ESCAPE,
    KEYBOARD_KEY_ENTER,
    KEYBOARD_KEY_TAB,
    KEYBOARD_KEY_BACKSPACE,
    KEYBOARD_KEY_INSERT,
    KEYBOARD_KEY_DELETE,
    KEYBOARD_KEY_RIGHT,
    KEYBOARD_KEY_LEFT,
    KEYBOARD_KEY_DOWN,
    KEYBOARD_KEY_UP,
    KEYBOARD_KEY_PAGE_UP,
    KEYBOARD_KEY_PAGE_DOWN,
    KEYBOARD_KEY_HOME,
    KEYBOARD_KEY_END,
    KEYBOARD_KEY_CAPS_LOCK,
    KEYBOARD_KEY_SCROLL_LOCK,
    KEYBOARD_KEY_NUM_LOCK,
    KEYBOARD_KEY_PRINT_SCREEN,
    KEYBOARD_KEY_PAUSE,
    KEYBOARD_KEY_F1,
    KEYBOARD_KEY_F2,
    KEYBOARD_KEY_F3,
    KEYBOARD_KEY_F4,
    KEYBOARD_KEY_F5,
    KEYBOARD_KEY_F6,
    KEYBOARD_KEY_F7,
    KEYBOARD_KEY_F8,
    KEYBOARD_KEY_F9,
    KEYBOARD_KEY_F10,
    KEYBOARD_KEY_F11,
    KEYBOARD_KEY_F12,
    KEYBOARD_KEY_F13,
    KEYBOARD_KEY_F14,
    KEYBOARD_KEY_F15,
    KEYBOARD_KEY_F16,
    KEYBOARD_KEY_F17,
    KEYBOARD_KEY_F18,
    KEYBOARD_KEY_F19,
    KEYBOARD_KEY_F20,
    KEYBOARD_KEY_F21,
    KEYBOARD_KEY_F22,
    KEYBOARD_KEY_F23,
    KEYBOARD_KEY_F24,
    KEYBOARD_KEY_F25,
    KEYBOARD_KEY_KP_0,
    KEYBOARD_KEY_KP_1,
    KEYBOARD_KEY_KP_2,
    KEYBOARD_KEY_KP_3,
    KEYBOARD_KEY_KP_4,
    KEYBOARD_KEY_KP_5,
    KEYBOARD_KEY_KP_6,
    KEYBOARD_KEY_KP_7,
    KEYBOARD_KEY_KP_8,
    KEYBOARD_KEY_KP_9,
    KEYBOARD_KEY_KP_DECIMAL,
    KEYBOARD_KEY_KP_DIVIDE,
    KEYBOARD_KEY_KP_MULTIPLY,
    KEYBOARD_KEY_KP_SUBTRACT,
    KEYBOARD_KEY_KP_ADD,
    KEYBOARD_KEY_KP_ENTER,
    KEYBOARD_KEY_KP_EQUAL,
    KEYBOARD_KEY_LEFT_SHIFT,
    KEYBOARD_KEY_LEFT_CONTROL,
    KEYBOARD_KEY_LEFT_ALT,
    KEYBOARD_KEY_LEFT_SUPER,
    KEYBOARD_KEY_RIGHT_SHIFT,
    KEYBOARD_KEY_RIGHT_CONTROL,
    KEYBOARD_KEY_RIGHT_ALT,
    KEYBOARD_KEY_RIGHT_SUPER,
    KEYBOARD_KEY_MENU,
    KEYBOARD_KEY__LAST,
} keyboard_keycode;

typedef enum {
    KEYBOARD_MOD_SHIFT = 0x01,
    KEYBOARD_MOD_CONTROL = 0x02,
    KEYBOARD_MOD_ALT = 0x04,
    KEYBOARD_MOD_SUPER = 0x08,
    KEYBOARD_MOD_CAPS_LOCK = 0x10,
    KEYBOARD_MOD_NUM_LOCK = 0x20,
} keyboard_mod;

#endif //THM_KEYBOARD_H
