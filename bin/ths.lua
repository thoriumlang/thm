#!/usr/bin/env lua

---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by cpollet.
--- DateTime: 16.12.21 20:32
---

local requireRel
if arg and arg[0] then
    package.path = arg[0]:match("(.-)[^\\/]+$") .. "?.lua;" .. package.path
    requireRel = require
elseif ... then
    local d = (...):match("(.-)[^%.]+$")
    function requireRel(module)
        return require(d .. module)
    end
end

function enum(tbl)
    for i = 1, #tbl do
        tbl[tbl[i]] = i
    end
    return tbl
end

function map(f, t)
    local t1 = {}
    local t_len = #t
    for i = 1, t_len do
        t1[i] = f(t[i])
    end
    return t1
end

function sum(t)
    local r = 0
    local t_len = #t

    for i = 1, t_len do
        r = r + t[i]
    end

    return r
end

function table.copy(t)
    local u = { }
    for k, v in pairs(t) do
        u[k] = v
    end
    return u
end

requireRel("ths-lexer")
requireRel("ths-parser")

local function read_file(path)
    local file = io.open(path, "rb") -- r read mode and b binary mode
    if not file then
        return nil
    end
    local content = file:read "*a" -- *a or *all reads the whole file
    file:close()
    return content
end

local lexer = Lexer:new(read_file(arg[1]))
local parser = Parser:new(lexer)
local ast = parser:parse()
for i = 1, #ast do
    io.write(ast[i]:toString() .. "\n")
end